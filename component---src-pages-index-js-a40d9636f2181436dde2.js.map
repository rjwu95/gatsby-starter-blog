{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["IndexPage","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","allMarkdownRemark","totalCount","edges","map","_ref2","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","style","textDecoration","color","frontmatter","title","date","excerpt","query","m","module","exports","require","default","React","createContext","PropTypes","object","string","isRequired","func","ListLink","props","display","marginRight","gatsby__WEBPACK_IMPORTED_MODULE_3__","children","Layout","margin","maxWidth","padding","marginBottom","textShadow","backgroundImage","listStyle","float","propTypes","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"yKA0BeA,UAtBG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChBC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,mBACAA,OAAAC,EAAA,EAAAD,CAAA,UAAKD,EAAKI,kBAAkBC,WAA5B,UACCL,EAAKI,kBAAkBE,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChCR,OAAAC,EAAA,EAAAD,CAAA,OAAKS,IAAKD,EAAKE,IACbV,OAAAC,EAAA,EAAAD,CAACW,EAAA,EAAD,CACEC,GAAIJ,EAAKK,OAAOC,KAChBC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,YAExCjB,OAAAC,EAAA,EAAAD,CAAA,UACGQ,EAAKU,YAAYC,MADpB,IAC2BnB,OAAAC,EAAA,EAAAD,CAAA,iBAASQ,EAAKU,YAAYE,OAErDpB,OAAAC,EAAA,EAAAD,CAAA,SAAIQ,EAAKa,gBAUd,IAAMC,EAAK,kCC5BlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,uICYpBK,IAAMC,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,kFC3ChBC,UAAW,SAAAC,GAAK,OACpBpC,OAAAC,EAAA,EAAAD,CAAA,MAAIe,MAAO,CAAEsB,QAAS,eAAgBC,YAAa,SACjDtC,OAAAC,EAAA,EAAAD,CAACuC,EAAA,EAAD,CAAM3B,GAAIwB,EAAMxB,IAAKwB,EAAMI,aAIzBC,EAAS,SAAA3C,GAAA,IAAG0C,EAAH1C,EAAG0C,SAAH,OACbxC,OAAAC,EAAA,EAAAD,CAAA,OAAKe,MAAO,CAAE2B,OAAM,YAAeC,SAAU,IAAKC,QAAO,WACvD5C,OAAAC,EAAA,EAAAD,CAAA,UAAQe,MAAO,CAAE8B,aAAc,YAC7B7C,OAAAC,EAAA,EAAAD,CAACuC,EAAA,EAAD,CAAM3B,GAAG,IAAIG,MAAO,CAAE+B,WAAY,OAAQC,gBAAiB,SACzD/C,OAAAC,EAAA,EAAAD,CAAA,MAAIe,MAAO,CAAEsB,QAAS,WAAtB,eAEFrC,OAAAC,EAAA,EAAAD,CAAA,MAAIe,MAAO,CAAEiC,UAAW,OAAQC,MAAO,UACrCjD,OAAAC,EAAA,EAAAD,CAACmC,EAAD,CAAUvB,GAAG,KAAb,QACAZ,OAAAC,EAAA,EAAAD,CAACmC,EAAD,CAAUvB,GAAG,UAAb,SACAZ,OAAAC,EAAA,EAAAD,CAACmC,EAAD,CAAUvB,GAAG,YAAb,aAGH4B,IAILC,EAAOS,UAAY,CACjBV,SAAUV,IAAUtB,KAAKyB,YAGZQ,wGClCTU,EAAmB,SAAArD,GAAkB,IAAfsD,EAAetD,EAAfsD,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAO5B,IAAM6B,cAAcC,IAApB1D,OAAA2D,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBD,UAAY,CAC3BE,SAAUtB,IAAU+B,MAAM,CACxBL,SAAU1B,IAAUE,OAAOC,aAC1BA,YAGUkB","file":"component---src-pages-index-js-a40d9636f2181436dde2.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <div>\n      <h1>gun's</h1>\n      <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <div key={node.id}>\n          <Link\n            to={node.fields.slug}\n            style={{ textDecoration: \"none\", color: \"inherit\" }}\n          >\n            <h3>\n              {node.frontmatter.title} <span>â€” {node.frontmatter.date}</span>\n            </h3>\n            <p>{node.excerpt}</p>\n          </Link>\n        </div>\n      ))}\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n// import { StaticQuery, graphql } from \"gatsby\"\n\n// import Header from \"./header\"\nimport \"./layout.css\"\nconst ListLink = props => (\n  <li style={{ display: \"inline-block\", marginRight: \"1rem\" }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nconst Layout = ({ children }) => (\n  <div style={{ margin: `3rem auto`, maxWidth: 650, padding: `0 1rem` }}>\n    <header style={{ marginBottom: \"1.5rem \" }}>\n      <Link to=\"/\" style={{ textShadow: \"none\", backgroundImage: \"none\" }}>\n        <h3 style={{ display: \"inline\" }}>gun's blog</h3>\n      </Link>\n      <ul style={{ listStyle: \"none\", float: \"right\" }}>\n        <ListLink to=\"/\">Home</ListLink>\n        <ListLink to=\"/about\">About</ListLink>\n        <ListLink to=\"/contact\">Contact</ListLink>\n      </ul>\n    </header>\n    {children}\n  </div>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}