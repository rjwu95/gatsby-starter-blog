{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","m","module","exports","require","default","React","createContext","PropTypes","object","string","isRequired","func","ListLink","props","style","display","marginRight","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","children","Layout","_ref","margin","maxWidth","padding","marginBottom","textShadow","backgroundImage","listStyle","float","propTypes","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","data","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-5a2177ae048c8c374ee4.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n// import { StaticQuery, graphql } from \"gatsby\"\n\n// import Header from \"./header\"\nimport \"./layout.css\"\nconst ListLink = props => (\n  <li style={{ display: \"inline-block\", marginRight: \"1rem\" }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nconst Layout = ({ children }) => (\n  <div style={{ margin: `3rem auto`, maxWidth: 650, padding: `0 1rem` }}>\n    <header style={{ marginBottom: \"1.5rem \" }}>\n      <Link to=\"/\" style={{ textShadow: \"none\", backgroundImage: \"none\" }}>\n        <h3 style={{ display: \"inline\" }}>gun's blog</h3>\n      </Link>\n      <ul style={{ listStyle: \"none\", float: \"right\" }}>\n        <ListLink to=\"/\">Home</ListLink>\n        <ListLink to=\"/about\">About</ListLink>\n        {/* <ListLink to=\"/contact\">Contact</ListLink> */}\n      </ul>\n    </header>\n    {children}\n  </div>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}